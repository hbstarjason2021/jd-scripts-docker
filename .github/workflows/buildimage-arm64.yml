name: build image arm64 & push
 
on: 

  workflow_dispatch: 
  #schedule:
  #   - cron: '01 1,13 * * *'

jobs:
  build:
    ##name: Units & Integrations
    runs-on: ubuntu-latest
    strategy:
         matrix:
           platform: [linux/amd64, linux/arm64]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      #run: |
      #  git clone https://github.com/hbstarjason/jd-scripts-docker/ && \
      #  cd jd-scripts-docker

    - name: List env
      run: env

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


    - name: Build and push
      id: docker_build-bak
      uses: docker/build-push-action@v2
      with:
         push: true
         tags: hbstarjason/jd-scripts:${{ github.sha }}-${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}
         platforms: ${{ matrix.platform }}
    
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
         push: true
         tags: hbstarjason/jd-scripts:latest-arm64
         platforms: linux/arm64

    - name: Push image to ali
      uses: risfeng/docker-image-build-push-action@v1.0
      with:
         #registry_url: 'registry.cn-beijing.aliyuncs.com'
         registry_url: 'registry.cn-wulanchabu.aliyuncs.com'
         namespaces: 'hbstarjason'
         repository_name: 'jd-scripts'
         user_name: ${{ secrets.ALIYUN_IMAGES_HUB_USER_NAME }}
         password: ${{ secrets.ALIYUN_IMAGES_HUB_TOKEN }}
         image_version: 'latest-arm64'
